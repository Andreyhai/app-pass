{"ast":null,"code":"var _jsxFileName = \"/home/andrey/WebstormProjects/inlife-project/src/components/Login/Login.js\";\nimport React, { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./login.css\";\nimport { VERIFICATION_ROUTE } from \"../../utils/consts\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  function randomInteger(min, max) {\n    let rand = min + Math.random() * (max - min);\n    return Math.round(rand);\n  }\n  let rez = \"\";\n  for (let i = 0; i < 6; i++) {\n    rez += randomInteger(0, 9);\n  }\n  let listOfStr = [];\n  let str = \"\";\n  const log = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:8080/send\", {\n      \"recipient\": str,\n      \"code\": rez\n    }).then(res => {\n      if (res) {\n        return window.location.replace(\"http://localhost:3000/verification\");\n      }\n    }).catch(err => {\n      return alert(`ERROR(не существует почты ${str})`);\n    });\n  };\n  const FormItem = props => {\n    const {\n      iconName,\n      labelName,\n      type\n    } = props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'icon',\n        children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n          name: iconName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: type,\n        onChange: e => {\n          str = e.target.value;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: labelName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  };\n  function deleteCookies() {\n    let allCookies = document.cookie.split(';');\n\n    // The \"expire\" attribute of every cookie is\n    // Set to \"Thu, 01 Jan 1970 00:00:00 GMT\"\n    for (let i = 0; i < allCookies.length; i++) document.cookie = allCookies[i] + \"=;expires=\" + new Date(0).toUTCString();\n    displayCookies.innerHTML = document.cookie;\n  }\n  return (\n    /*#__PURE__*/\n    // <Fragment>\n    //     <div>\n    //         <div className=\"wrapper1\">\n    //             <Link to=\"/\">\n    //                 <div className='icon-close'>\n    //                     <ion-icon name=\"close\" />\n    //                 </div>\n    //             </Link>\n    //             <div className=\"form-box\">\n    //                 <h2>Зарегистрироваться</h2>\n    //                 {/*<form>*/}\n    //                     <FormItem iconName={\"mail\"} type={\"text\"} labelName={\"Mail\"}/>\n    //                     <FormItem iconName={\"person\"} type={\"text\"} labelName={\"Firstname\"}/>\n    //                     <FormItem iconName={\"person\"} type={\"text\"} labelName={\"Lastname\"}/>\n    //                     <FormItem iconName={\"lock-closed\"} type={\"password\"} labelName={\"Password\"} />\n    //                     <FormItem iconName={\"lock-closed\"} type={\"password\"} labelName={\"Password\"} />\n    //                     <Link to={VERIFICATION_ROUTE}>\n    //                         <button type=\"submit\" className=\"btn\" onClick={(e) => log(e)}>\n    //                             Зарегистрироваться\n    //                         </button>\n    //                     </Link>\n    //                 {/*</form>*/}\n    //             </div>\n    //         </div>\n    //     </div>\n    // </Fragment>\n    _jsxDEV(Button, {\n      variant: \"success\",\n      active: true,\n      onClick: deleteCookies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Fragment","useState","axios","Link","VERIFICATION_ROUTE","Button","Login","randomInteger","min","max","rand","Math","random","round","rez","i","listOfStr","str","log","e","preventDefault","post","then","res","window","location","replace","catch","err","alert","FormItem","props","iconName","labelName","type","target","value","deleteCookies","allCookies","document","cookie","split","length","Date","toUTCString","displayCookies","innerHTML"],"sources":["/home/andrey/WebstormProjects/inlife-project/src/components/Login/Login.js"],"sourcesContent":["import React, {Fragment, useState} from \"react\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\nimport \"./login.css\";\nimport {VERIFICATION_ROUTE} from \"../../utils/consts\";\nimport {Button} from \"react-bootstrap\";\n\nconst Login = () => {\n\n    function randomInteger(min, max) {\n        let rand = min + Math.random() * (max - min);\n        return Math.round(rand);\n    }\n    let rez = \"\"\n    for (let i = 0; i < 6; i++) {\n        rez += randomInteger(0, 9);\n    }\n\n    let listOfStr = []\nlet str = \"\"\n\n    const log = (e) => {\n        e.preventDefault()\n        axios.post(\n            \"http://localhost:8080/send\",\n            {\n                \"recipient\":str,\n                \"code\": rez\n            }\n        ).then(res => {\n            if (res) {\n\n                return window.location.replace(\"http://localhost:3000/verification\");\n            }\n        }).catch(err => {\n            return alert(`ERROR(не существует почты ${str})`)\n        })\n    }\n\n    const FormItem = (props) => {\n\n        const { iconName, labelName, type } = props\n\n        return (\n            <div className=\"input-box\">\n                <span className={'icon'}>\n                    <ion-icon name={iconName}></ion-icon>\n                </span>\n                <input type={type} onChange={(e) => {\n                    str = e.target.value\n                }}/>\n                <label>{labelName}</label>\n            </div>\n        );\n    }\n    function deleteCookies() {\n        let allCookies = document.cookie.split(';');\n\n// The \"expire\" attribute of every cookie is\n// Set to \"Thu, 01 Jan 1970 00:00:00 GMT\"\n        for (let i = 0; i < allCookies.length; i++)\n            document.cookie = allCookies[i] + \"=;expires=\"\n                + new Date(0).toUTCString();\n\n        displayCookies.innerHTML = document.cookie;\n\n    }\n    return (\n        // <Fragment>\n        //     <div>\n        //         <div className=\"wrapper1\">\n        //             <Link to=\"/\">\n        //                 <div className='icon-close'>\n        //                     <ion-icon name=\"close\" />\n        //                 </div>\n        //             </Link>\n        //             <div className=\"form-box\">\n        //                 <h2>Зарегистрироваться</h2>\n        //                 {/*<form>*/}\n        //                     <FormItem iconName={\"mail\"} type={\"text\"} labelName={\"Mail\"}/>\n        //                     <FormItem iconName={\"person\"} type={\"text\"} labelName={\"Firstname\"}/>\n        //                     <FormItem iconName={\"person\"} type={\"text\"} labelName={\"Lastname\"}/>\n        //                     <FormItem iconName={\"lock-closed\"} type={\"password\"} labelName={\"Password\"} />\n        //                     <FormItem iconName={\"lock-closed\"} type={\"password\"} labelName={\"Password\"} />\n        //                     <Link to={VERIFICATION_ROUTE}>\n        //                         <button type=\"submit\" className=\"btn\" onClick={(e) => log(e)}>\n        //                             Зарегистрироваться\n        //                         </button>\n        //                     </Link>\n        //                 {/*</form>*/}\n        //             </div>\n        //         </div>\n        //     </div>\n        // </Fragment>\n\n        <Button variant={\"success\"} active onClick={deleteCookies}/>\n\n    );\n}\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}